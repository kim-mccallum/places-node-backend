{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","ref","PlaceItem","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","process","id","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/7.8d13e13d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n// Simple presentational component - only renders content\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport \"./Map.css\";\r\n\r\nconst Map = (props) => {\r\n  //   useRef hook to get reference/pointer to dom node - set up a connection between the div below and this constant - COME BACK AND STUDY HERE!\r\n  const mapRef = useRef();\r\n  //destructure to get out center/zoom so rerender only happens if these properties change\r\n  const { center, zoom } = props;\r\n  //runs when component first renders after JSX renders which means the connection in the ref will have been made- componentDidMount?\r\n  useEffect(() => {\r\n    // constructor available on global window object cuz maps api is loaded\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom,\r\n    });\r\n\r\n    new window.google.maps.Marker({ position: center, map: map });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className} \r\n      style=${props.style}`}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./PlaceItem.css\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: `Bearer ${auth.token}`,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n      // setLoadedPlace(responseData.place);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? This cannot be undone.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nimport \"./PlaceList.css\";\r\n\r\nconst PlaceList = (props) => {\r\n  // check if you don't have items\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","// fetch and render all the places from a user\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  //gives you access to dynamic segs from route config\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}